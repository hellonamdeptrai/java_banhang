/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import OBJ.NhanVien;
import Utils.checkData;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tuanc
 */
public class frmNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form frmNhanVien
     */
    private DefaultTableModel defaultTableModel;
    NhanVien nv = new NhanVien();
    ArrayList<NhanVien> listNV = new ArrayList<>();
    checkData check = new checkData();

    public frmNhanVien() {
        initComponents();
        loadFile();
        getData(listNV);
    }

    public void loadFile() {
        try {
            BufferedReader br = null;
            FileReader fr = null;
            listNV = new ArrayList<>(); //lưu ý
            fr = new FileReader("nhanvien.txt");
            br = new BufferedReader(fr);
            String s = null;

            try {
                while ((s = br.readLine()) != null) {
                    //Cắt chuỗi:
                    String arr[] = s.split("\t");
                    //Khởi tạo
                    NhanVien nv = new NhanVien();
                    nv.setMaNhanVien(arr[0]);
                    nv.setHoTen(arr[1]);
                    nv.setSoDienThoai(arr[2]);
                    nv.setEmail(arr[3]);
                    nv.setMatKhau(arr[4]);
                    nv.setNhom(Integer.parseInt(arr[5]));
                    nv.setGioiTinh(arr[6]);
                    nv.setTrangThai(Integer.parseInt(arr[7]));
                    listNV.add(nv);
                }
            } catch (IOException ex) {
                Logger.getLogger(frmNhanVienTemplate.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmNhanVienTemplate.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void saveFile() {

        try {
            BufferedWriter bw = null; //Khởi tạo
            FileWriter fw = null; //Khởi tạo
            String data = ""; //Tạo một string data bằng rỗng.
            for (int i = 0; i < listNV.size(); i++) {
                String row = ""; //tạo hàng rỗng
                row = row + listNV.get(i).getMaNhanVien() + "\t";
                row = row + listNV.get(i).getHoTen() + "\t";
                row = row + listNV.get(i).getSoDienThoai() + "\t";
                row = row + listNV.get(i).getEmail() + "\t";
                row = row + listNV.get(i).getMatKhau() + "\t";
                row = row + listNV.get(i).getNhom() + "\t";
                row = row + listNV.get(i).getGioiTinh() + "\t";
                row = row + listNV.get(i).getTrangThai() + "\n";
                data += row;
            }
            fw = new FileWriter("nhanvien.txt");
            bw = new BufferedWriter(fw);
            bw.write(data);
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(frmNhanVienTemplate.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void getData(ArrayList<NhanVien> listNV) {
        defaultTableModel = new DefaultTableModel();
        defaultTableModel.addColumn("Mã NV");
        defaultTableModel.addColumn("Họ tên NV");
        defaultTableModel.addColumn("Giới tính");
        defaultTableModel.addColumn("Email");
        defaultTableModel.addColumn("SĐT");
        defaultTableModel.addColumn("Nhóm");
        defaultTableModel.addColumn("Trạng Thái");

        for (NhanVien obj : listNV) {
            Vector vector = new Vector();
            vector.add(obj.getMaNhanVien());
            vector.add(obj.getHoTen());
            vector.add(obj.getGioiTinh());
            vector.add(obj.getEmail());
            vector.add(obj.getSoDienThoai());
            vector.add(obj.getNhom() == 1 ? "Quản lý" : "Nhân viên");
            vector.add(obj.getTrangThai() == 1 ? "Hoạt động" : "Đã khóa");
            defaultTableModel.addRow(vector);
        }
        bangnhanvien.setModel(defaultTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bangnhanvien = new javax.swing.JTable();
        txt_maNhaVien = new javax.swing.JTextField();
        txt_hoTen = new javax.swing.JTextField();
        txt_sdt = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        txt_email = new javax.swing.JTextField();
        txt_timKiem = new javax.swing.JTextField();
        box_gioiTinh = new javax.swing.JComboBox<>();
        txt_nhom = new javax.swing.JComboBox<>();
        timkiem = new javax.swing.JButton();
        them = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        btn_chinhSua = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        zxcccccd = new javax.swing.JLabel();
        as = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_trangthai = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bangnhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        bangnhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bangnhanvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bangnhanvien);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 361, 947, 140));
        add(txt_maNhaVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 140, 30));
        add(txt_hoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 79, 140, 30));
        add(txt_sdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 140, 30));

        pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passKeyPressed(evt);
            }
        });
        add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 139, 140, 30));

        txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_emailKeyPressed(evt);
            }
        });
        add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 140, 30));
        add(txt_timKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 109, 210, 40));

        box_gioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));
        box_gioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_gioiTinhActionPerformed(evt);
            }
        });
        add(box_gioiTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 267, 80, -1));

        txt_nhom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Nhân viên" }));
        add(txt_nhom, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 267, 80, -1));

        timkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Magnifier-icon.png"))); // NOI18N
        timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timkiemActionPerformed(evt);
            }
        });
        add(timkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 110, -1, 40));

        them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/more.png"))); // NOI18N
        them.setText("Thêm");
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });
        add(them, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 230, -1, -1));

        btn_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btn_xoa.setText("Xóa");
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });
        add(btn_xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 230, 90, -1));

        btn_chinhSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/wrench.png"))); // NOI18N
        btn_chinhSua.setText("Sửa");
        btn_chinhSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chinhSuaActionPerformed(evt);
            }
        });
        add(btn_chinhSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 310, 90, -1));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_exit_24px.png"))); // NOI18N
        jButton5.setText("Thoát");
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 310, -1, -1));

        zxcccccd.setText("Mã nhân viên");
        add(zxcccccd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 89, -1, -1));

        as.setText("Mật khẩu");
        add(as, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 149, -1, -1));

        jLabel16.setText("Email");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 207, -1, -1));

        jLabel17.setText("Giới tính");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        jLabel18.setText("Họ và tên");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 89, 60, -1));

        jLabel19.setText("SĐT");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 149, 30, -1));

        jLabel20.setText("Trạng thái");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 60, -1));

        jLabel21.setText("Nhóm");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 40, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Quản lý nhân viên");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(371, 11, -1, -1));

        txt_trangthai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hoạt động", "Đã Khóa" }));
        add(txt_trangthai, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 207, 80, -1));

        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jLabel3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jLabel3KeyTyped(evt);
            }
        });
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 140, 20));

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 140, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void box_gioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_gioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_box_gioiTinhActionPerformed
    public void reset() {
        txt_hoTen.setText("");
        txt_email.setText("");
        txt_maNhaVien.setText("");
        txt_nhom.setSelectedItem("Quản lý");
        txt_sdt.setText("");
        txt_trangthai.setSelectedItem("Hoạt động");
        pass.setText("");
        box_gioiTinh.setSelectedItem("Nam");
    }
    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed
        String hoten = txt_hoTen.getText();
        String manv = txt_maNhaVien.getText();
        String matkhau = pass.getText();
        String sdt = txt_sdt.getText();
        String email = txt_email.getText();
        String gioitinh = "Nam";
        if (box_gioiTinh.getSelectedItem().equals("Nữ")) {
            gioitinh = "Nữ";
        } else if (box_gioiTinh.getSelectedItem().equals("Khác")) {
            gioitinh = "Khác";
        }
        int nhom = 0;
        if (txt_nhom.getSelectedItem().equals("Quản lý")) {
            nhom = 1;
        }
        int trangthai = 0;
        if (txt_trangthai.getSelectedItem().equals("Hoạt động")) {
            trangthai = 1;
        }

        NhanVien nv = new NhanVien();
        if (manv.equals("")) {
            JOptionPane.showMessageDialog(this, "Mã nhân viên không được để trống !");
            return;
        }
        for (int i = 0; i < listNV.size(); i++) {
            if (manv.equals(listNV.get(i).getMaNhanVien())) {
                JOptionPane.showMessageDialog(this, "Mã bị trùng, hãy nhập lại");
                return;
            } else {
                nv.setMaNhanVien(manv);
            }
        }
        if (hoten.equals("")) {
            JOptionPane.showMessageDialog(this, "Họ và tên không được để trống !");
            return;
        }
        if (!check.kiemTraTen(hoten)) {
            JOptionPane.showMessageDialog(this, "Tên không được chứa số !");
            return;
        }
        nv.setHoTen(hoten);
        if (email.equals("")) {
            JOptionPane.showMessageDialog(this, "Email không được để trống !");
            return;
        }
        if (!check.kiemTraEmail(email)) {
            JOptionPane.showMessageDialog(this, "Email không đúng định dạng !");
            return;
        }
        nv.setEmail(email);
        nv.setGioiTinh(gioitinh);
        if (matkhau.equals("")) {
            JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống !");
            return;
        }
        nv.setMatKhau(check.md5(matkhau));
        if (sdt.equals("")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống !");
            return;
        }
        if (check.kiemTraSDT(sdt)) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không đúng định dạng !");
            return;
        }
        nv.setSoDienThoai(sdt);
        nv.setNhom(nhom);
        nv.setTrangThai(trangthai);

        listNV.add(nv);
        getData(listNV);
        saveFile();
        JOptionPane.showMessageDialog(this, "Thêm mới thành công");
        reset();
    }//GEN-LAST:event_themActionPerformed

    private void timkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timkiemActionPerformed
        String tuKhoa = txt_timKiem.getText();
        if (tuKhoa == "") {
            getData(listNV);
        } else {
            ArrayList<NhanVien> listNV_timkiem = new ArrayList<>();
            for (int i = 0; i < listNV.size(); i++) {
                if (listNV.get(i).getMaNhanVien().equalsIgnoreCase(tuKhoa) || listNV.get(i).getSoDienThoai().equalsIgnoreCase(tuKhoa) || listNV.get(i).getEmail().equalsIgnoreCase(tuKhoa) || listNV.get(i).getHoTen().contains(tuKhoa)) {
                    listNV_timkiem.add(listNV.get(i));
                }
            }
            getData(listNV_timkiem);
        }
    }//GEN-LAST:event_timkiemActionPerformed
    int index;
    private void bangnhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bangnhanvienMouseClicked
        btn_chinhSua.setEnabled(true);
        btn_xoa.setEnabled(true);
        // lấy ra bản ghi
        int row = bangnhanvien.getSelectedRow();
        String maNV = bangnhanvien.getValueAt(row, 0).toString();
        for (int i = 0; i < listNV.size(); i++) {
            if (maNV.equals(listNV.get(i).getMaNhanVien())) {
                nv = listNV.get(i);
                index = i;
                break;
            }
        }
        txt_maNhaVien.setEnabled(false);
        pass.setEnabled(false);
        them.setEnabled(false);

        txt_maNhaVien.setText(nv.getMaNhanVien());
        txt_email.setText(nv.getEmail());
        txt_hoTen.setText(nv.getHoTen());
        txt_sdt.setText(nv.getSoDienThoai());
        pass.setText(nv.getMatKhau());

        if (nv.getGioiTinh().equals("Nam")) {
            box_gioiTinh.setSelectedItem("Nam");
        } else if (nv.getGioiTinh().equals("Nữ")) {
            box_gioiTinh.setSelectedItem("Nữ");
        } else {
            box_gioiTinh.setSelectedItem("Khác");
        }
        if (nv.getNhom() == 1) {
            txt_nhom.setSelectedItem("Quản lý");
        } else {
            txt_nhom.setSelectedItem("Nhân viên");
        }
        if (nv.getTrangThai() == 1) {
            txt_trangthai.setSelectedItem("Hoạt động");
        } else {
            txt_trangthai.setSelectedItem("Đã khóa");
        }
    }//GEN-LAST:event_bangnhanvienMouseClicked

    private void btn_chinhSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chinhSuaActionPerformed
        String hoten = txt_hoTen.getText();
        String manv = txt_maNhaVien.getText();
        String matkhau = pass.getText();
        String sdt = txt_sdt.getText();
        String email = txt_email.getText();
        String gioitinh = "Nam";
        if (box_gioiTinh.getSelectedItem().equals("Nữ")) {
            gioitinh = "Nữ";
        } else if (box_gioiTinh.getSelectedItem().equals("Khác")) {
            gioitinh = "Khác";
        }
        int nhom = 0;
        if (txt_nhom.getSelectedItem().equals("Quản lý")) {
            nhom = 1;
        }
        int trangthai = 0;
        if (txt_trangthai.getSelectedItem().equals("Hoạt động")) {
            trangthai = 1;
        }

        NhanVien nv = new NhanVien();

        nv.setMaNhanVien(manv);

        if (hoten.equals("")) {
            JOptionPane.showMessageDialog(this, "Họ và tên không được để trống !");
            return;
        }
        if (!check.kiemTraTen(hoten)) {
            JOptionPane.showMessageDialog(this, "Tên không được chứa số !");
            return;
        }
        nv.setHoTen(hoten);
        if (email.equals("")) {
            JOptionPane.showMessageDialog(this, "Email không được để trống !");
            return;
        }
        if (!check.kiemTraEmail(email)) {
            JOptionPane.showMessageDialog(this, "Email không đúng định dạng !");
            return;
        }
        nv.setEmail(email);
        nv.setGioiTinh(gioitinh);
        if (matkhau.equals("")) {
            JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống !");
            return;
        }
        nv.setMatKhau(matkhau);
        if (sdt.equals("")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống !");
            return;
        }
        if (check.kiemTraSDT(sdt)) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không đúng định dạng !");
            return;
        }
        nv.setSoDienThoai(sdt);
        nv.setNhom(nhom);
        nv.setTrangThai(trangthai);

        listNV.set(index, nv);
        getData(listNV);
        saveFile();
        JOptionPane.showMessageDialog(this, "Chỉnh sửa thành công " + nv.getMaNhanVien());
        reset();
    }//GEN-LAST:event_btn_chinhSuaActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa nhân viên " + nv.getMaNhanVien() + " không ?", "Xóa nhân viên", 2);
        if (confirm == JOptionPane.YES_OPTION) {
            if (listNV.remove(nv) == true) {
                saveFile();
                JOptionPane.showConfirmDialog(this, "Xóa thành công !");
                getData(listNV);
                reset();
            } else {
                JOptionPane.showConfirmDialog(this, "Xóa thất bại !");
            }
        }
    }//GEN-LAST:event_btn_xoaActionPerformed

    private void jLabel3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel3KeyPressed

    }//GEN-LAST:event_jLabel3KeyPressed

    private void jLabel3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel3KeyTyped
        
    }//GEN-LAST:event_jLabel3KeyTyped

    private void jLabel3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel3KeyReleased
        
    }//GEN-LAST:event_jLabel3KeyReleased
    int dem = 0;
    private void txt_emailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emailKeyPressed
        String email = txt_email.getText();
        if (!check.kiemTraEmail(email)) {
            jLabel3.setText("Email không đúng định dạng");
        } else {
            jLabel3.setText("");
            dem++;
        }
    }//GEN-LAST:event_txt_emailKeyPressed

    private void passKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passKeyPressed
        // TODO add your handling code here:
        String matkhau = pass.getText();
        if (matkhau.length() < 8) {
            jLabel2.setText("Mật khẩu yếu");
        } else {
            jLabel2.setText("");
            dem++;
        }
    }//GEN-LAST:event_passKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel as;
    private javax.swing.JTable bangnhanvien;
    private javax.swing.JComboBox<String> box_gioiTinh;
    private javax.swing.JButton btn_chinhSua;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField pass;
    private javax.swing.JButton them;
    private javax.swing.JButton timkiem;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_hoTen;
    private javax.swing.JTextField txt_maNhaVien;
    private javax.swing.JComboBox<String> txt_nhom;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_timKiem;
    private javax.swing.JComboBox<String> txt_trangthai;
    private javax.swing.JLabel zxcccccd;
    // End of variables declaration//GEN-END:variables
}
